name: DeployTerraform

on:
  workflow_dispatch:

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ${{ github.workspace }}/appservice
    
    env:
      ARM_CLIENT_ID: ${{ secrets.TF_ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.TF_ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.TF_ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TF_ARM_TENNANT_ID }}    
      AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.STORAGE_CONNSTRING }}
      
    environment:
      name: dev
      
    steps:
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az storage blob download --container-name sample --file terraform.tfstate

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var "prefix=${{ secrets.RESOURCE_PREFIX }}"
        continue-on-error: true
  
      - name: Terraform Apply
        run: terraform apply -auto-approve -var "prefix=${{ secrets.RESOURCE_PREFIX }}"  

      - name: 'Use Terraform Output'
        id: output
        run: |
         URL=$(terraform output app_service_default_hostname)
         echo "::set-output name=app_url::$URL"

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az storage blob upload-batch -d sample -s appservice --pattern *.tfstate
         
